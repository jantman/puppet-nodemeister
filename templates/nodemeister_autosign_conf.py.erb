#!<%= @python_bin %>
#
# Script to generate a Puppet autosign.conf based on nodes in NodeMeister ENC, 
# until Puppet issue 7244 (http://projects.puppetlabs.com/issues/7244) is done.
#
# Intended to be run via cron on the PuppetMaster.
#
#############################################################################################
#
# WARNING - WARNING - WARNING
# This file is managed by Puppet and any local changes will be overwritten AND will force a
#  restart of the service!!!
#
#############################################################################################

import optparse
import sys
import requests
from datetime import datetime
import platform
import getpass

def get_all_enc_nodes(enc_host, verbose=False):
    """
    Get a list of all hostnames of nodes in the ENC
    """
    url = "http://%s/enc/nodes/" % enc_host
    r = requests.get(url)
    if r.status_code != 200:
        sys.stderr.write("ERROR: request to %s returned %d\n" % (url, r.status_code))
    j = r.json()
    nodes = []
    for node in j:
        nodes.append(str(node['hostname']))
    if verbose:
        print("Got list of nodes from %s: %s" % (url, nodes))
    return nodes

def write_autosign_conf(enc_host, autosign_path, verbose=False):
    """
    Get all nodes known by the NodeMeister installation running on enc_host,
    and write an autosign.conf with them, at autosign_path.
    """
    nodes = get_all_enc_nodes(enc_host, verbose)
    foo = datetime.now().strftime("%Y-%m-%d %H:%M:%S%z")
    with open(autosign_path, "w") as fh:
        fh.write("# THIS FILE GENERATED BY SCRIPT\n")
        fh.write("# %s generated by %s\n" % (autosign_path, __file__))
        fh.write("# at %s on %s as user %s\n" % (foo, platform.node(), getpass.getuser()))
        for h in nodes:
            fh.write("%s\n" % h)

if __name__ == '__main__':
    parser = optparse.OptionParser()
    parser.add_option('-e', '--enc-host', dest='enc_host', action="store", type="string",
                      help='hostname or FQDN of NodeMeister ENC')

    parser.add_option('-f', '--file', dest='autosign_file', action="store", type="string",
                       help='path to write autosign.conf at', default='/etc/puppet/autosign.conf')

    parser.add_option('-v', '--verbose', dest='verbose', action="store_true", default=False,
                       help='verbose/debug output')

    options, args = parser.parse_args()

    if not options.enc_host:
        sys.stderr.write("ERROR: you must specify a NodeMeister ENC host with -e|--enc-host\n")
        sys.exit(2)

    write_autosign_conf(options.enc_host, options.autosign_file, options.verbose)
